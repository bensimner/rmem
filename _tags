#
# when building the web-interface the Makefile adds the predicate nozarith,
# that causes package(lem) and package(linksem) to chose the version that
# does not use zarith, lem_num and linksem_num, otherwise lem_zarith and
# linksem_zarith are selected
#

#
# exclude the following folders:
#
"build_sail_shallow_embedding": -traverse
"doc"                         : -traverse
"old"                         : -traverse
"regression"                  : -traverse
"regression-rems"             : -traverse
"scripts"                     : -traverse
"src_concurrency_model"       : -traverse
"src_web_interface"           : -traverse
"tests"                       : -traverse
"tests-adhoc"                 : -traverse
"tests-rit"                   : -traverse
"patches"                     : -traverse

#
# search path for source files:
#   the Makefile also adds src_top/text or src_top/web or src_top/headless
#   according to the selected UI
#
"src_top"                       : include
"src_top/herd_based"            : include
<build_isa_models/*>            : include
"build_concurrency_model"       : include
"build_sail_interp"             : include
"build_sail_interp/pprint/src"  : include
"build_sail2_shallow_embedding" : include

#
# files that use js_of_ocaml special syntax:
#
<src_top/web/*.{ml,mli}> or <src_top/webppc.ml> : package(js_of_ocaml), package(js_of_ocaml.ppx)

#
# library dependencies:
#
<src_top/*.{ml,mli}> or <src_top/**/*.{ml,mli}> : package(lem), package(linksem), package(base64), package(sail)
<src_top/text/*.{ml,mli}>                  : package(lambda-term), package(sail)
<build_concurrency_model/*.{ml,mli}>       : package(lem)
<build_isa_models/**/*.{ml,mli}>           : package(lem), package(sail)
<build_sail_interp/**/*.{ml,mli}>          : package(lem), package(sail)
<build_sail2_shallow_embedding/*.{ml,mli}> : package(lem)
<src_marshal_defs/*.{ml,mli}>              : package(lem), package(base64), package(sail)

<src_marshal_defs/marshal_defs.{d.byte,byte,native,p.native}> : package(lem), package(base64), package(sail)

<src_top/main.{d.byte,byte,native,p.native}> : package(unix), package(str), package(lem), package(linksem), package(base64), package(sail)
# the Makefile also adds package(lambda-term) when building text (and not headless)

<src_top/webppc.{d.byte,byte}> : package(unix), package(js_of_ocaml), package(lem), package(linksem), package(base64), package(sail)

<src_top/console_help_printer.{d.byte,byte,native,p.native}> : package(lem), package(base64)

<src_top/litmus2xml.{d.byte,byte,native,p.native}> : package(unix), package(str), package(linksem), package(base64)

<**/*.d.byte> : debug

#
# ignore warnings
#
<build_concurrency_model/interp*.ml>                : warn_p, warn_y
<build_concurrency_model/instruction_extractor.ml>  : warn_p
<build_concurrency_model/*_embed_types.ml>          : warn_p, warn_y
<build_concurrency_model/*_embed.ml>                : warn_p, warn_y
<build_concurrency_model/*_embed_sequential.ml>     : warn_p, warn_y
<build_concurrency_model/riscv.ml>                  : warn_a
<build_concurrency_model/*_toFromInterp.ml>         : warn_p, warn_y
<build_sail_interp/pretty_interp.ml>                : warn_p, warn_u
